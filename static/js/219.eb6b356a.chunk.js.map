{"version":3,"file":"static/js/219.eb6b356a.chunk.js","mappings":"2PAEaA,EAAWC,EAAAA,GAAAA,GAAH,oIAQRC,EAAWD,EAAAA,GAAAA,GAAH,yJASRE,EAAUF,EAAAA,GAAAA,IAAH,uGAOPG,EAAWH,EAAAA,GAAAA,EAAH,8IAMV,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,I,SC1BG,SAASC,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAC3BN,EAAWM,EAAOC,KAAKC,KACxB,GACF,GAAE,CAACP,IAECF,GAGH,0BACE,SAACX,EAAD,UACGW,EAAQU,OAAS,GACdV,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,KAA3B,OACZ,UAACvB,EAAD,YACE,SAACC,EAAD,CACEuB,IACEF,EACI,kCAAoCA,EACpC,6EAENG,IAAI,MAEN,SAACvB,EAAD,UAAWqB,MATEF,EADH,QAND,IAuBxB,C,6MClCKK,EAAYC,EAAAA,EAAAA,OAAa,CAC3BC,QAFa,+BAGbC,OAAQ,CACNC,QALU,sCASHC,EAAc,mCAAG,+GAEHL,EAAUM,IAAI,uBAFX,cAEpBC,EAFoB,OAGlBhB,EAASgB,EAAThB,KAHkB,kBAInBA,GAJmB,gCAM1BiB,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GANV,yDAAH,qDAUdC,EAAe,mCAAG,WAAMC,GAAN,gGAEJV,EAAUM,IAAV,iBAAwBI,IAFpB,cAErBH,EAFqB,yBAGpBA,GAHoB,gCAK3BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALT,yDAAH,sDASfG,EAAe,mCAAG,WAAMC,GAAN,gGAEJZ,EAAUM,IAAI,gBAAiB,CACpDH,OAAQS,IAHiB,cAErBL,EAFqB,yBAKpBA,GALoB,gCAO3BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GAPT,yDAAH,sDAWfpB,EAAc,mCAAG,WAAMsB,GAAN,gGAEHV,EAAUM,IAAV,iBAAwBI,EAAxB,aAFG,cAEpBH,EAFoB,yBAGnBA,GAHmB,gCAK1BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALV,yDAAH,sDASdK,EAAe,mCAAG,WAAMH,GAAN,gGAEJV,EAAUM,IAAV,iBAAwBI,EAAxB,aAFI,cAErBH,EAFqB,yBAGpBA,GAHoB,gCAK3BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALT,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n  margin: -3px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: baseline;\n  max-width: 130px;\n  margin: 3px;\n  flex-grow: 1;\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 100%;\n  margin-bottom: 3px;\n`;\n\nexport const CastName = styled.p`\n  display: block;\n  text-align: center;\n  font-size: 13px;\n  font-weight: 500;\n  margin-top: 5px;\n  color: ${p => p.theme.colors.text};\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCreditMovie } from 'services/api';\nimport { CastList, CastItem, CastImg, CastName } from 'components/Cast/Cast.styled';\n\n\nexport default function Cast() {\n    const [credits, setCredits] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      getCreditMovie(movieId).then(result => {\n        setCredits(result.data.cast);\n      });\n    }, [movieId]);\n\n    if (!credits) return null;\n\n    return (\n      <div>\n        <CastList>\n          {credits.length > 0 &&\n              credits.map(({credit_id, profile_path, name}) => (\n              <CastItem key={credit_id}>\n                <CastImg\n                  src={\n                    profile_path\n                      ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                      : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                  }\n                  alt=\"\"\n                />\n                <CastName>{name}</CastName>\n              </CastItem>\n            \n          ))}\n        </CastList>\n      </div>\n    );\n}\n\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '58e3b7ceceb51aa1e95a679f50fa8e58';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst paramsURL = axios.create({\n    baseURL: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\nexport const getTrendMovies = async () => {\n  try {\n    const response = await paramsURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getDetailsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await paramsURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getCreditMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getReviewsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n"],"names":["CastList","styled","CastItem","CastImg","CastName","p","theme","colors","text","Cast","useState","credits","setCredits","movieId","useParams","useEffect","getCreditMovie","then","result","data","cast","length","map","credit_id","profile_path","name","src","alt","paramsURL","axios","baseURL","params","api_key","getTrendMovies","get","response","toast","getDetailsMovie","id","getSearchMovies","query","getReviewsMovie"],"sourceRoot":""}