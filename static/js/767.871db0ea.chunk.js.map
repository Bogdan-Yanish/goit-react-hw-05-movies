{"version":3,"file":"static/js/767.871db0ea.chunk.js","mappings":"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","sources":["components/TrendMovieList/TrendMoviesList.styled.js","components/TrendMovieList/TrendMoviesList.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\n\nexport const MovieListItem = styled.li`\n    display:flex;\n    align-items:center;\n    gap:5px;\n    padding:8px;\n    boreder-radius:4px;\n    color:${p => p.theme.colors.text};\n    font-weight:500;\n    font-size:24px;\n\n    // &.active {\n    //   background-color: ${p => p.theme.colors.accent};\n    //   color:white;\n    // }\n\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n      background-color: ${p => p.theme.colors.accent};\n      color: ${p => p.theme.colors.white};\n    }\n`\n\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieList, MovieListItem } from './TrendMoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <MovieList>\n      {movies.map(({id, title, name }) => {\n        return (\n          <MovieListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title ?? name}\n            </Link>\n          </MovieListItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const SearchingForm = styled(Form)`\n  max-width: 450px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: #dde1e7;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #ffffff73;\n`;\n\nexport const SearchFormInput = styled(Field)`\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  padding: 10px 20px;\n  outline: none;\n  border: none;\n  color: ${p => p.theme.colors.text};\n  background-color: transparent;\n\n  ::placeholder {\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 10px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.text};\n  transition: color 450ms ease-in-out;\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const SearchFormBtnIcon = styled(FcSearch)`\n  width: 25px;\n  height: 25px;\n`;\n","import { Formik } from 'formik';\nimport {\n  SearchingForm,\n  SearchFormInput,\n  SearchFormBtn,\n  SearchFormBtnIcon,\n} from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit, value }) => {\n  return (\n    <Formik\n      initialValues={{ query: value ?? '' }}\n      onSubmit={values => {\n        onSubmit(values);\n      }}\n    >\n      <SearchingForm>\n        <SearchFormInput\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Enter movie...\"\n        />\n        <SearchFormBtn type=\"submit\">\n          <SearchFormBtnIcon />\n        </SearchFormBtn>\n      </SearchingForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getSearchMovies } from 'services/api';\nimport { MoviesList } from 'components/TrendMovieList/TrendMoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesContainer } from './Movies.styled';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResult, setSearchResult] = useState([]);\n\n  useEffect(() => {\n    let movieName = searchParams.get('query') ?? '';\n    if (movieName === '') {\n      return;\n    } else {\n\n      getSearchMovies({\n        query: movieName,\n        page: 1,\n      }).then(result => {\n        setSearchResult(result.data.results);\n      });\n    }\n\n  }, [searchParams]);\n\n  const handleSubmit = value => {\n    if (value.query.trim() === '') {\n      toast('Please, enter movie name!', {});\n      return;\n    } else {\n      const nextParams = value.query !== '' ? { query: value.query } : {};\n      setSearchParams(nextParams);\n    }\n  };\n\n  return (\n    <MoviesContainer>\n      <SearchForm onSubmit={handleSubmit} value={searchParams.get('query')}/>\n      <MoviesList movies={searchResult} />\n    </MoviesContainer>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '58e3b7ceceb51aa1e95a679f50fa8e58';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst paramsURL = axios.create({\n    baseURL: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\nexport const getTrendMovies = async () => {\n  try {\n    const response = await paramsURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getDetailsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await paramsURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getCreditMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getReviewsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n"],"names":["MovieList","styled","MovieListItem","p","theme","colors","text","accent","white","MoviesList","movies","location","useLocation","map","id","title","name","to","state","from","SearchingForm","Form","SearchFormInput","Field","SearchFormBtn","SearchFormBtnIcon","FcSearch","SearchForm","onSubmit","value","initialValues","query","values","type","placeholder","MoviesContainer","Movies","useSearchParams","searchParams","setSearchParams","useState","searchResult","setSearchResult","useEffect","movieName","get","getSearchMovies","page","then","result","data","results","trim","nextParams","toast","paramsURL","axios","baseURL","params","api_key","getTrendMovies","response","getDetailsMovie","getCreditMovie","getReviewsMovie"],"sourceRoot":""}