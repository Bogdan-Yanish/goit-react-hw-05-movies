{"version":3,"file":"static/js/553.0882c0b8.chunk.js","mappings":"4MAEaA,EAAgB,CAC3BC,SAAU,KACVC,MAAO,IACPC,OAAQ,SACRC,WAAW,GAEAC,EAASC,EAAAA,E,uKCLTC,EAAYC,EAAAA,GAAAA,IAAH,6CAITC,EAAcD,EAAAA,GAAAA,GAAH,sIACb,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAOCC,EAAiBN,EAAAA,GAAAA,GAAH,2IAChB,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAOCE,GAAOP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,4aAcO,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,MAAnB,IAKD,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,MAAnB,IACZ,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,KAAnB,ICzCDC,EAAaX,EAAAA,GAAAA,GAAH,2JAMZ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,I,SCLCO,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACvB,OACE,SAACF,EAAD,UACGE,EAAYC,KAAI,SAAAC,GACf,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,KAGN,ECTYC,EAAgBlB,EAAAA,GAAAA,IAAH,wIAIf,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOe,IAAnB,IACiB,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,OAAOgB,MAAnB,IAGjBC,EAAerB,EAAAA,GAAAA,IAAH,2GAOZM,EAAiBN,EAAAA,GAAAA,GAAH,6FAGhB,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAGCiB,EAAiBtB,EAAAA,GAAAA,IAAH,+DAEhB,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAGCkB,EAAevB,EAAAA,GAAAA,GAAH,yFAGd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAGCmB,EAAexB,EAAAA,GAAAA,EAAH,4NCvBZyB,EAAY,SAAC,GAAe,IAAD,MAAZC,EAAY,EAAZA,MAClBC,EAA0GD,EAA1GC,SAAUC,EAAgGF,EAAhGE,YAAavB,EAAmFqB,EAAnFrB,MAAOW,EAA4EU,EAA5EV,KAAMa,EAAsEH,EAAtEG,eAAgBC,EAAsDJ,EAAtDI,cAAeC,EAAuCL,EAAvCK,aAAcC,EAAyBN,EAAzBM,aAAcC,EAAWP,EAAXO,OACjGC,EAAS,qCAAG7B,QAAH,IAAGA,EAAAA,EAASW,SAAZ,QAAoBa,SAApB,QAAsCC,SAAtC,QAAuD,UAChEK,EAAmBJ,EAAaK,MAAM,EAAG,GACzCC,EAAcC,KAAKC,KAAoB,GAAfP,GAAqB,IAEnD,OACE,UAACd,EAAD,YACE,SAACG,EAAD,CACEmB,IACEZ,EACI,kCAAoCA,EACpC,6EAENa,IAAI,MAEN,4BACE,UAAC,EAAD,WACGP,EACA,KAFH,IAGIC,EAHJ,QAKA,UAACb,EAAD,YACA,SAACC,EAAD,2BACA,SAACC,EAAD,UAAea,QAEf,UAACf,EAAD,YACE,SAACC,EAAD,wBADF,IAC0CI,MAE1C,UAACL,EAAD,YACE,SAACC,EAAD,uBACC,SAACX,EAAD,CAAQC,YAAaoB,YAK/B,E,UC3CYS,GAAW1C,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,uYAOV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOe,IAAnB,IAQC,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,MAAnB,IAIDkC,GAAe3C,EAAAA,EAAAA,IAAO4C,EAAAA,IAAP5C,CAAH,gF,oBCbV,SAAS6C,IAAiB,IAAD,IAC9BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAQ,qBAAGC,EAAAA,EAAAA,MAAcC,aAAjB,aAAG,EAAqBC,YAAxB,QAAgC,IAY9C,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBV,GAASW,MAAK,SAAAC,GAC5BR,EAAaQ,EAAOC,KACrB,GACF,GAAE,CAACb,KAEJS,EAAAA,EAAAA,YAAU,WACR1D,EAAAA,EAAAA,eAAsBL,EAAAA,EACvB,GAAE,IAEEyD,GAGH,UAAClD,EAAD,YACE,UAAC2C,EAAD,CAAUkB,GAAIT,EAAd,WACE,SAACR,EAAD,IADF,UAICM,IACC,4BACE,SAACxB,EAAD,CAAWC,MAAOuB,KAClB,SAAC3C,EAAD,wCACA,gBACEuD,MAAO,CACLC,QAAS,OACTC,eAAgB,eAChBC,aAAc,QAJlB,WAOE,SAAC/D,EAAD,WACE,SAACM,EAAD,CAAMqD,GAAG,OAAOP,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,SAAClD,EAAD,WACE,SAACM,EAAD,CAAMqD,GAAG,UAAUP,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,YA/Ba,IAqCxB,C,6MCzDKC,EAAYC,EAAAA,EAAAA,OAAa,CAC3BC,QAFa,+BAGbC,OAAQ,CACNC,QALU,sCASHC,EAAc,mCAAG,+GAEHL,EAAUM,IAAI,uBAFX,cAEpBC,EAFoB,OAGlBhB,EAASgB,EAAThB,KAHkB,kBAInBA,GAJmB,gCAM1BiB,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GANV,yDAAH,qDAUdpB,EAAe,mCAAG,WAAMvC,GAAN,gGAEJmD,EAAUM,IAAV,iBAAwBzD,IAFpB,cAErB0D,EAFqB,yBAGpBA,GAHoB,gCAK3BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALT,yDAAH,sDASfC,EAAe,mCAAG,WAAMC,GAAN,gGAEJV,EAAUM,IAAI,gBAAiB,CACpDH,OAAQO,IAHiB,cAErBH,EAFqB,yBAKpBA,GALoB,gCAO3BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GAPT,yDAAH,sDAWfG,EAAc,mCAAG,WAAM9D,GAAN,gGAEHmD,EAAUM,IAAV,iBAAwBzD,EAAxB,aAFG,cAEpB0D,EAFoB,yBAGnBA,GAHmB,gCAK1BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALV,yDAAH,sDASdI,EAAe,mCAAG,WAAM/D,GAAN,gGAEJmD,EAAUM,IAAV,iBAAwBzD,EAAxB,aAFI,cAErB0D,EAFqB,yBAGpBA,GAHoB,gCAK3BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALT,yDAAH,qD","sources":["components/Scroll/Scroll.js","pages/DetailsMovies/DetailsMovies.styled.js","components/Genres/Genres.styled.js","components/Genres/Genres.js","components/MoveItem/MovieItem.styled.js","components/MoveItem/MovieItem.js","components/CommonStyles/BackLink.styled.js","pages/DetailsMovies/DetailsMovies.js","services/api.js"],"sourcesContent":["import * as Scroll from 'react-scroll';\n\nexport const scrollOptions = {\n  duration: 1200,\n  delay: 200,\n  smooth: 'linear',\n  isDynamic: true,\n};\nexport const scroll = Scroll.animateScroll;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieData = styled.div`\n  max-width: 768px;\n`;\n\nexport const AddListItem = styled.li`\n  color: ${p => p.theme.colors.title};\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 14px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoTitle = styled.h2`\n  color: ${p => p.theme.colors.title};\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Link = styled(NavLink)`\n  display:block;\n  width: 100px;\n  text-align: center;\n  padding: 8px 16px;\n  border-radius: 25px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  background-color: lightgrey;\n  margin-bottom: 10px;\n\n  &.active {\n    color: white;\n    background-color: ${p => p.theme.colors.accent};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n  }\n}\n`\n","import styled from 'styled-components';\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.colors.title};\n`;\n","import PropTypes from 'prop-types';\nimport { GenresList } from './Genres.styled';\n\nexport const Genres = ({ movieGenres }) => {\n  return (\n    <GenresList>\n      {movieGenres.map(genre => {\n        return <li key={genre.id}>{genre.name}</li>;\n      })}\n    </GenresList>\n  );\n};\n\nGenres.propTypes = {\n  movieGenres: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieInfoCard = styled.div`\n  display: flex;\n  max-width: 1200px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.text};\n  border-bottom: 1px solid ${p => p.theme.colors.border};\n`;\n\nexport const MovieInfoImg = styled.img`\n  display: block;\n  width: 350px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoTitle = styled.h2`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.title};\n`;\n\nexport const MovieInfoBlock = styled.div`\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.title};\n`;\n\nexport const PreInfoTitle = styled.h3`\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.title};\n`;\n\nexport const RatingStyled = styled.p `\n  width: 80px;\n  text-align: center;\n  padding: 5px;\n  border-radius: 25px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  background-color: lightgrey;\n  margin-top: 5px;\n`\n","import PropTypes from 'prop-types';\nimport { Genres } from 'components/Genres/Genres';\nimport {\n  MovieInfoCard,\n  MovieInfoImg,\n  MovieInfoTitle,\n  MovieInfoBlock,\n  PreInfoTitle,\n  RatingStyled\n} from './MovieItem.styled';\n\nexport const MovieInfo = ({ movie }) => {\n  const { overview, poster_path, title, name, original_title, original_name, release_date, vote_average, genres } = movie;\n  const movieName = title ?? name ?? original_title ?? original_name ?? 'No data';\n  const movieDateRelease = release_date.slice(0, 4);\n  const movieRating = Math.ceil(vote_average * 10) + '%';\n  \n  return (\n    <MovieInfoCard>\n      <MovieInfoImg\n        src={\n          poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + poster_path\n            : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n        }\n        alt=\"\"\n      />\n      <div>\n        <MovieInfoTitle>\n          {movieName}\n          {'  '}\n          ({movieDateRelease})\n        </MovieInfoTitle>\n        <MovieInfoBlock>\n        <PreInfoTitle>User Score:</PreInfoTitle> \n        <RatingStyled>{movieRating}</RatingStyled>\n        </MovieInfoBlock>\n        <MovieInfoBlock>\n          <PreInfoTitle>Overview:</PreInfoTitle> {overview}\n        </MovieInfoBlock>\n        <MovieInfoBlock>\n          <PreInfoTitle>Genres:</PreInfoTitle>\n          {<Genres movieGenres={genres} />}\n        </MovieInfoBlock>\n      </div>\n    </MovieInfoCard>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  margin-bottom: 40px;\n  padding: 5px;\n  color: ${p => p.theme.colors.text};\n  text-transform: uppercase;\n  background-color: lightgrey;\n  border-radius: 25px;\n  box-shadow: 2px 2px 5px #babecc, -5px -5px 10px #ffffff73;\n  transition: color 450ms ease-in-out;\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const BackLinkIcon = styled(FaArrowLeft)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getDetailsMovie } from 'services/api';\nimport { MovieInfoTitle } from './DetailsMovies.styled';\nimport { MovieInfo } from 'components/MoveItem/MovieItem';\nimport {  BackLink, BackLinkIcon } from 'components/CommonStyles/BackLink.styled';\nimport { LoaderSpinner } from 'components/Loader/Loader';\nimport { MovieData, AddListItem, Link  } from './DetailsMovies.styled';\nimport { scrollOptions, scroll } from 'components/Scroll/Scroll';\n\nexport default function DetailsMovies() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState();\n  const location = useLocation().state?.from ?? '/';\n\n  useEffect(() => {\n    getDetailsMovie(movieId).then(result => {\n      setMovieInfo(result.data);\n    });\n  }, [movieId]);\n\n  useEffect(() => {\n    scroll.scrollToBottom(scrollOptions);\n  }, []);\n\n  if (!movieInfo) return null;\n\n  return (\n    <MovieData>\n      <BackLink to={location}>\n        <BackLinkIcon />\n        Back \n      </BackLink>\n      {movieInfo && (\n        <div>\n          <MovieInfo movie={movieInfo} />\n          <MovieInfoTitle>Addictional information:</MovieInfoTitle>\n          <ul\n            style={{\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              marginBottom: '10px',\n            }}\n          >\n            <AddListItem>\n              <Link to=\"cast\" state={{ from: location }}>\n                Cast\n              </Link>\n            </AddListItem>\n            <AddListItem>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </AddListItem>\n          </ul>\n          <Suspense fallback={<LoaderSpinner />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </MovieData>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '58e3b7ceceb51aa1e95a679f50fa8e58';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst paramsURL = axios.create({\n    baseURL: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\nexport const getTrendMovies = async () => {\n  try {\n    const response = await paramsURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getDetailsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await paramsURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getCreditMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getReviewsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n"],"names":["scrollOptions","duration","delay","smooth","isDynamic","scroll","Scroll","MovieData","styled","AddListItem","p","theme","colors","title","MovieInfoTitle","Link","NavLink","accent","white","GenresList","Genres","movieGenres","map","genre","name","id","MovieInfoCard","text","border","MovieInfoImg","MovieInfoBlock","PreInfoTitle","RatingStyled","MovieInfo","movie","overview","poster_path","original_title","original_name","release_date","vote_average","genres","movieName","movieDateRelease","slice","movieRating","Math","ceil","src","alt","BackLink","BackLinkIcon","FaArrowLeft","DetailsMovies","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","state","from","useEffect","getDetailsMovie","then","result","data","to","style","display","justifyContent","marginBottom","Suspense","fallback","Loader","paramsURL","axios","baseURL","params","api_key","getTrendMovies","get","response","toast","getSearchMovies","query","getCreditMovie","getReviewsMovie"],"sourceRoot":""}