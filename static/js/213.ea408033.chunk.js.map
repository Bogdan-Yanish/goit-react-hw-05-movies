{"version":3,"file":"static/js/213.ea408033.chunk.js","mappings":"oLAEaA,EAAYC,EAAAA,GAAAA,GAAH,0FAMTC,EAAgBD,EAAAA,GAAAA,GAAH,sYAMd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAKgB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,MAAnB,IAMJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,MAAnB,IACZ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,KAAnB,I,SCtBHC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACZ,EAAD,UACGU,EAAOG,KAAI,YAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvB,OACE,SAACd,EAAD,WACE,SAAC,KAAD,CAAMe,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,gBACKI,QADL,IACKA,EAAAA,EAASC,KAFIF,EAMvB,KAGN,C,2HClBYM,E,QAAYnB,GAAAA,GAAH,oHAIX,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,MAAnB,I,SCDG,SAASc,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAiBC,MAAK,SAAAC,GACpB,IAAQC,EAAYD,EAAZC,QACRC,QAAQC,IAAIF,GACZL,EAAkBK,EACnB,GACF,GAAE,KAGD,4BACE,SAACT,EAAD,+BACA,SAAC,IAAD,CAAYV,OAAQa,MAGzB,C,6MCjBKS,EAAYC,EAAAA,EAAAA,OAAa,CAC3BC,QAFa,+BAGbC,OAAQ,CACNC,QALU,sCASHV,EAAc,mCAAG,+GAEHM,EAAUK,IAAI,uBAFX,cAEpBC,EAFoB,OAGlBC,EAASD,EAATC,KAHkB,kBAInBA,GAJmB,gCAM1BC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GANV,yDAAH,qDAUdC,EAAe,mCAAG,WAAM3B,GAAN,gGAEJkB,EAAUK,IAAV,iBAAwBvB,IAFpB,cAErBwB,EAFqB,yBAGpBA,GAHoB,gCAK3BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALT,yDAAH,sDASfE,EAAe,mCAAG,WAAMC,GAAN,gGAEJX,EAAUK,IAAI,gBAAiB,CACpDF,OAAQQ,IAHiB,cAErBL,EAFqB,yBAKpBA,GALoB,gCAO3BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GAPT,yDAAH,sDAWfI,EAAc,mCAAG,WAAM9B,GAAN,gGAEHkB,EAAUK,IAAV,iBAAwBvB,EAAxB,aAFG,cAEpBwB,EAFoB,yBAGnBA,GAHmB,gCAK1BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALV,yDAAH,sDASdK,EAAe,mCAAG,WAAM/B,GAAN,gGAEJkB,EAAUK,IAAV,iBAAwBvB,EAAxB,aAFI,cAErBwB,EAFqB,yBAGpBA,GAHoB,gCAK3BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALT,yDAAH,qD","sources":["components/TrendMovieList/TrendMoviesList.styled.js","components/TrendMovieList/TrendMoviesList.js","components/CommonStyles/MainTitle.styled.js","pages/Home/Home.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\n\nexport const MovieListItem = styled.li`\n    display:flex;\n    align-items:center;\n    gap:5px;\n    padding:8px;\n    boreder-radius:4px;\n    color:${p => p.theme.colors.text};\n    font-weight:500;\n    font-size:24px;\n\n    // &.active {\n    //   background-color: ${p => p.theme.colors.accent};\n    //   color:white;\n    // }\n\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n      background-color: ${p => p.theme.colors.accent};\n      color: ${p => p.theme.colors.white};\n    }\n`\n\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieList, MovieListItem } from './TrendMoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <MovieList>\n      {movies.map(({id, title, name }) => {\n        return (\n          <MovieListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title ?? name}\n            </Link>\n          </MovieListItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.accent};\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrendMovies } from 'services/api';\nimport { MoviesList } from 'components/TrendMovieList/TrendMoviesList';\nimport { MainTitle } from 'components/CommonStyles/MainTitle.styled';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendMovies().then(result => {\n      const { results } = result;\n      console.log(results);\n      setTrendingMovies(results);\n    });\n  }, []);\n\n  return (\n    <div>\n      <MainTitle>Trending movies</MainTitle>\n      <MoviesList movies={trendingMovies} />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '58e3b7ceceb51aa1e95a679f50fa8e58';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst paramsURL = axios.create({\n    baseURL: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\nexport const getTrendMovies = async () => {\n  try {\n    const response = await paramsURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getDetailsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await paramsURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getCreditMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\nexport const getReviewsMovie = async id => {\n  try {\n    const response = await paramsURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n"],"names":["MovieList","styled","MovieListItem","p","theme","colors","text","accent","white","MoviesList","movies","location","useLocation","map","id","title","name","to","state","from","MainTitle","Home","useState","trendingMovies","setTrendingMovies","useEffect","getTrendMovies","then","result","results","console","log","paramsURL","axios","baseURL","params","api_key","get","response","data","toast","getDetailsMovie","getSearchMovies","query","getCreditMovie","getReviewsMovie"],"sourceRoot":""}